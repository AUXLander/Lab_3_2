<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>